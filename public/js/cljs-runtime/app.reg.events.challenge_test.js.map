{"version":3,"sources":["app/reg/events/challenge_test.cljs"],"mappings":"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","names":["app.reg.events.challenge-test/spec1","app.reg.events.challenge-test/spec2","cljs.test/test-var","app.reg.events.challenge-test/normalize-specs","values__9937__auto__","cljs.core/List","result__9938__auto__","cljs.core.apply","cljs.test/report","cljs.core/cons","t__9974__auto__","e59794","cljs.core/=","app.reg.events.challenge/normalize-specs","app.reg.events.challenge-test/dbc1","app.reg.events.challenge-test/dbc2","app.reg.events.challenge-test/dbcnil","app.reg.events.challenge-test/next-challenge","e59795","app.reg.events.challenge/next-challenge","e59796","app.reg.events.challenge-test/complete?","e59797","app.reg.events.challenge/challenge-complete?","e59798","app.reg.events.challenge-test/fail?","e59799","app.reg.events.challenge/challenge-failed?","e59800","e59801","e59802"],"sourcesContent":["(ns app.reg.events.challenge-test\n  (:require [cljs.test :refer [deftest is]]\n            [app.reg.events.challenge :as c]))\n\n(def spec1 {:plain \"A\" :hide-plain? true})\n(def spec2 {:code [\".\"]})\n\n(deftest normalize-specs\n  (is (= (c/normalize-specs [spec1 spec2])\n         [\n          {:plain \"A\" :hide-plain? true :hide-code? false :wpm nil :code [\".\" \"-\"]}\n          {:plain \"E\" :hide-plain? false :hide-code? false :wpm nil :code [\".\"]}\n         ])))\n\n(def dbc1 {:index 0 \n           :curr-code [\".\"] \n           :state :running\n           :challenge-specs [{:code [\".\"] :plain \"E\" :hide-plain? false :hide-code? false :wpm nil}\n                             {:code [\".\" \"-\"] :plain \"A\" :hide-plain? false :hide-code? false :wpm nil}]})\n\n(def dbc2 {:index 1 \n           :curr-code [\".\" \"-\"] \n           :state :running\n           :challenge-specs [{:code [\".\"] :plain \"E\" :hide-plain? false :hide-code? false :wpm nil}\n                             {:code [\".\" \"-\"] :plain \"A\" :hide-plain? false :hide-code? false :wpm nil}]})\n(def dbcnil {:index 1\n           :curr-code [] \n           :state :completed\n           :challenge-specs [{:code [\".\"] :plain \"E\" :hide-plain? false :hide-code? false :wpm nil}\n                             {:code [\".\" \"-\"] :plain \"A\" :hide-plain? false :hide-code? false :wpm nil}]})\n\n(deftest next-challenge\n  (is (= (c/next-challenge dbc1) dbc2))\n  (is (= (c/next-challenge dbc2) dbcnil))\n)\n\n(deftest complete?\n  (is (= false (c/challenge-complete? dbc1 [\"-\"])))\n  (is (= true (c/challenge-complete? dbc1 [\".\"]))))\n\n(deftest fail?\n  (is (= false (c/challenge-failed? dbc2 [\".\"])))\n  (is (= true (c/challenge-failed? dbc2 [\"-\"])))\n  (is (= true (c/challenge-failed? dbc2 [\"-\" \".\"])))\n  (is (= false (c/challenge-failed? dbc2 [\".\" \"-\"])))\n)\n"]}