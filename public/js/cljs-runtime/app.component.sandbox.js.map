{"version":3,"sources":["app/component/sandbox.cljs"],"mappings":";AAWA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAKA;AAEL,AAAA,AAAMC;AAAN,AACE,AAAA,AAAAC,AAAMC,AAAI,AAAA,AAAA,AAACC;AACLC,AAAE,AAACC,AAAWH;AACdI,AAAM,AAAA,AAAI,AAAA,AAAGF,AAEL,AAAA,AAAGA;AAJjB,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAOGG,AACAC,AAAeT,AAAmBO,AAClCG,AACAD,AAAeN,AAAWI","names":["app.component.sandbox/morse-code","app.component.sandbox/page","cljs.core/deref","mc","re_frame.core.subscribe","t","app.helpers.parse/count-code","slice","app.component.wpm-controller/wpm-controller","app.component.bar/morse-code-bar","app.component.button/default-btn"],"sourcesContent":["(ns app.component.sandbox\n  (:require\n    [app.helpers.parse :refer [count-code]]\n    [app.component.bar :refer [morse-code-bar]]\n    [app.component.button :refer [default-btn]]\n    [app.component.wpm-controller :refer [wpm-controller]]\n    [app.component.text-form :refer [text-input text-output]]\n    [re-frame.core :refer [dispatch subscribe]]\n  ))\n\n\n(def morse-code [\".\" \"charspace\" \".\" \"-\" \"charspace\" \"-\" \"wordspace\" \".\" \"-\" \"charspace\" \"-\" \"wordspace\" \".\" \"-\" \"charspace\" \"-\" \"wordspace\" \".\" \"-\" \"charspace\" \"-\" \"wordspace\" ])\n\n(defn page []\n  (let [mc @(subscribe [:predict->morse-code])\n        t (count-code mc)\n        slice (if (< t 15) \n                0\n                (- t 15)) \n       ]\n  [:div\n    [wpm-controller]\n    [morse-code-bar morse-code {:slice slice}]\n    [default-btn]\n    [morse-code-bar mc {:slice slice}]\n  ]))\n"]}