{"version":3,"sources":["app/helpers/sing_test.cljs"],"mappings":";AAKA,AAAA,AAAA,AAAKA;AACL,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAKC;AAEL,AAAA,AAAA,AAASE;AAAT,AAAA,AAAAD,AAAA,AAASC;;AAAT,AAASA;AAAT,AACE,AAAA,AAAA,AAAAC,AAAA,AAAAC,AAAA,AAAA,AAAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAO,AAACQ,AAAsBb,AAAKC;AAAnCK,AAAA,AAAAC,AAAAH,AAAKQ;AAAL,AAAA,AAAAN;AAAA,AAAAE,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAAC,AAAA,AAAA,AAAAL,AAAA;;AAAA,AAAAI,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAAH,AAAA,AAAA,AAAA,AAAA,AAAAA,AAAA,AAAA,AAAAI,AAAA,AAAA,AAAAL,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA;;;AAAAE,AAAA,AAAAI,AAAAC;AAAA,AAAA,AAAAH,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAAE,AAAA;;AACA,AAAA,AAAA,AAAAN,AAAA,AAAAC,AAAA,AAAA,AAAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAO,AAACU,AAAcd;AAAtBK,AAAA,AAAAC,AAAAH,AAAKQ;AAAL,AAAA,AAAAN;AAAA,AAAAE,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAAC,AAAA,AAAA,AAAAL,AAAA;;AAAA,AAAAI,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAAH,AAAA,AAAA,AAAA,AAAA,AAAAA,AAAA,AAAA,AAAAI,AAAA,AAAA,AAAAL,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA;;;AAAAE;AAAA,AAAAI,AAAAI;AAAA,AAAA,AAAAN,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAAE,AAAA;;;AAFF,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAAP,AAAA,AAAA,AAAAA,AAAA,AAASA","names":["app.helpers.sing-test/mt1","app.helpers.sing-test/flat-mt","cljs.test/test-var","app.helpers.sing-test/predictions","values__9937__auto__","cljs.core/List","result__9938__auto__","cljs.core.apply","cljs.test/report","cljs.core/cons","t__9974__auto__","e49930","cljs.core/=","app.helpers.singer/flatten-morse-text","e49931","app.helpers.singer/make-notes"],"sourcesContent":["(ns app.helpers.sing-test\n  (:require [cljs.test :refer [deftest is]]\n            [app.helpers.singer :as sg]\n  ))\n\n(def mt1 '([\".\" \"-\" \".\"] [\".\"]))\n(def flat-mt [\".\" \"-\" \".\" \" \" \".\" \" \"])\n\n(deftest predictions\n  (is (= (sg/flatten-morse-text mt1) flat-mt))\n  (is (= (sg/make-notes flat-mt) [\n                                  [1 :play]\n                                  [1 :rest]\n                                  [3 :play]\n                                  [1 :rest]\n                                  [1 :play]\n                                  [1 :rest]\n                                  [2 :rest]\n                                  [1 :play]\n                                  [1 :rest]\n                                  [2 :rest]\n                                  ]))\n  ;(is (= [\".\" \"-\" \" \" \".\"] (make-notes '([\".\" \"-\"] [\".\"]))))\n;  ;(is (= \" \" (predict log1 0)))\n;  ;(is (= \".\" (predict log2 1)))\n;  ;(is (= \"-\" (predict log2 3)))\n;  ;(is (= \" \" (predict log3 3)))\n;  (is (= [] (predict-log log3 3)))\n)\n\n\n"]}