{"version":3,"sources":["app/views/code.cljs"],"mappings":";AAOA;;;AAAA,AAAOe;AAAPf;AAAA,AAAA,AAAAC,AAAA,AAAAC,AAAAF;AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAAG,AAAAF,AAAA,AAAA,AAAAG,AAAAH,AAAA;AAAA,AAAA,AAAA,AAAAI,AAAA,AAAAC,AAAAL,AAAA;AAAA,AAAA,AAAA,AAAAI,AAAA;AAAA,AAAA,AAAAC,AAAAL,AAAA,AACIe;AADJ,AAAA,AAAA,AAAA,AACgBA;;AADhB,AAAA,AAAAT;;;AAAA,AAAA,AAAAC,AAAAC;AAAA,AAAAC,AAAAF;AAAA,AAAA,AAAA,AAAAE,AAAAH;AAAA,AAAA,AAAA,AAAA,AAAAF,AAAA,AAAAC,AAAAL,AAAA;AAAA,AAAA,AAAA,AAAAI,AAAA;AAAA,AAAA,AAAAC,AAAAL,AAAA,AAEIe;AAFJ,AAAA,AAAA,AAAA,AAEgBA;;AAFhB,AAAA,AAAAT;;;AAAA,AAAA,AAAAI,AAAAF;AAAA,AAAAC,AAAAC;AAAA,AAAA,AAAA,AAAAD,AAAAH;AAAA,AAAA,AAAA,AAAA,AAAAF,AAAA,AAAAC,AAAAL,AAAA;AAAA,AAAA,AAAA,AAAAI,AAAA;AAAA,AAAA,AAAAC,AAAAL,AAAA,AAGIe;AAHJ,AAAA,AAAA,AAAA,AAGgBA;;AAHhB,AAAA,AAAAT;;;AAAA,AAAA,AAAAK,AAAAH;AAAA,AAAAC,AAAAE;AAAA,AAAA,AAAA,AAAAF,AAAAH;AAAA,AAAA,AAAAA;;AAAA,AAAAG;;;AAAA,AAAA,AAAAE;;;;AAAA,AAAAF;;;AAAA,AAAA,AAAAC;;;;AAAA,AAAAD;;;AAAA,AAAA,AAAAF;;;;AAAA,AAAA,AAAAD;;;AAAA,AAAA,AAAAM,AAAAJ;AAAA,AAAAC,AAAAG;AAAA,AAAA,AAAA,AAAAH,AAAAH;AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAAJ,AAAAF,AAAA,AAAA,AAAAG,AAAAH,AAAA;AAAA,AAAA,AAAAK,AAAAL,AAAA,AAIIgB;AAJJ,AAAA,AAAA,AAAA,AAIiBC,AAAOH,AAAaE;;AAJrC,AAAA,AAAAV;;;AAAA,AAAA,AAAAO,AAAAL;AAAA,AAAAC,AAAAI;AAAA,AAAA,AAAA,AAAAJ,AAAAH;AAAA,AAAA,AAAA,AAAAE,AAAA,AAAA,AAAAR;;AAAA,AAAAS;;;AAAA,AAAA,AAAAI;;;;AAAA,AAAAJ;;;AAAA,AAAA,AAAAG;;;;;AAAAb;;;;AAAAA;;AAAAA;;;AAAAA;AAAAA;;;;;;AAMA,AAAA,AAAMmB,AAAiBC,AAAMC;AAA7B,AACE,AAAMC,AAAY,AAAA,AAAK,AAACC,AAAWH;AAAnC,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AACsCE,AAEbD,AAErB,AAACG,AACC,AAAKC,AAAIC;AAAT,AACE,AAAMC,AAAU,AAAA,AAAK,AAACJ,AAAWG;AAAjC,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAEUD,AAAmBE,AAEvB,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAI,AAAA,AAACC,AAAEF,AACP,AAAA,AAAI,AAAA,AAACE,AAAEF,AAAeA;AAG9BN;;AAIR,AAAA,AAAMS,AACHC,AAAWC;AADd,AAAA,AAAA,AAGI,AAACP,AACC,AAAKC,AAAIO;AAAT,AAAA,AAAA,AAAA,AAAA,AAAA,AACaP,AACRN,AAAgB,AAACb,AAAIwB,AAAWL,AAAKO;AAC1CD;;AAGN,AAAA,AAAME,AAAWH;AAAjB,AACE,AAAMC,AAAW,AAACG,AAA2BJ;AAA7C,AAAA,AACGD,AAAiBC,AAAWC","names":["args__31711__auto__","ocr-37932","cljs.core/vec","cljs.core/vector?","cljs.core/count","ocr-37932_1__37935","cljs.core.nth","cljs.core.match/backtrack","e37939","js/Error","e__30676__auto__","e37940","e37941","e37937","e37938","app.views.code/block-size","acc","morse-syms","cljs.core.reduce","app.views.code/code-card__char","morse","plain","block-width","app.views.code.block_size","cljs.core.map_indexed","idx","c","sym-width","cljs.core._EQ_","app.views.code/code-card__outer","morse-text","plain-text","ch","app.views.code/code-card","app.helpers.parser/morse-text->plain-text-vec"],"sourcesContent":["(ns app.views.code\n  (:require\n    [cljs.core.match :refer [match]]\n    [defun.core :refer [defun]]\n    [app.helpers.parser :refer [morse-text->plain-text-vec]]\n  ))\n\n(defun block-size \n  ([acc \".\"] (+ acc 1))\n  ([acc \"-\"] (+ acc 3))\n  ([acc \" \"] (+ acc 3))\n  ([morse-syms] (reduce block-size 0 morse-syms)))\n\n(defn code-card__char [morse plain]\n  (let [block-width (str (block-size morse) \"rem\")]\n  [:div.code-card__char {:style {:width block-width\n                                 :min-width \"2rem\"}}\n    [:div.code-card__plain plain]\n    [:div.code-card__morse \n      (map-indexed\n        (fn [idx c]\n          (let [sym-width (str (block-size c) \"rem\")]\n            [:div.code-card__morse-sym-out \n              {:key idx :style {:width sym-width}}\n              [:p.code-card__morse-sym-in\n                (if (= c \" \") {:style {:visibility \"hidden\"}})\n                (if (= c \" \") \"space\" c)\n                ]]))\n                  \n        morse)]\n  ]))\n\n\n(defn code-card__outer\n  [morse-text plain-text]\n  [:div.code-card__outer \n    (map-indexed\n      (fn [idx ch]\n        [:<> {:key idx}\n          [code-card__char (nth morse-text idx) ch]])\n      plain-text)])\n\n\n(defn code-card [morse-text]\n  (let [plain-text (morse-text->plain-text-vec morse-text)]\n    [code-card__outer morse-text plain-text]))\n\n"]}