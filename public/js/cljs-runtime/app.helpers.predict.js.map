{"version":3,"sources":["app/helpers/predict.cljs"],"mappings":";AAGA,AAAA,AAAMA,AAAgBC;AAAtB,AACE,AAAI,AAAA,AAACC,AAAED;AAAP;;AAAA;;;AAGF,AAAA,AAAME,AAAaC;AAAnB,AACE,AAAMH,AAAE,AAAA,AAAA,AAAA,AAAIG,AAAIC,AAAWL;AAA3B,AAAA,AAAA,AACMM,AAAaL,AAAQ,AAAMM;AADjC,AAEE,AAACC,AAAKJ,AAAIE","names":["app.helpers.predict/alternate-type","t","cljs.core._EQ_","app.helpers.predict/predict-log","log","cljs.core/last","entry","js/Date","cljs.core.conj"],"sourcesContent":["(ns app.helpers.predict)\n\n\n(defn alternate-type [t]\n  (if (= t :up) :down :up))\n\n\n(defn predict-log [log]\n  (let [t (-> log last :type alternate-type)\n        entry {:type t :time (.now js/Date)}]\n    (conj log entry)))\n"]}