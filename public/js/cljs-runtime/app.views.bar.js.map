{"version":3,"sources":["app/views/bar.cljs"],"mappings":"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","names":["app.views.bar/ticker-width","app.views.bar/width","n","app.views.bar/styles","garden.core.css","app.views.bar/dash","i","app.views.bar/dot","app.views.bar/charspace","app.views.bar/wordspace","app.views.bar/input-bar","morse-code","opts","cljs.core.map_indexed","args__31711__auto__","ocr-37437","cljs.core/vec","cljs.core/vector?","cljs.core/count","ocr-37437_1__37440","cljs.core.nth","cljs.core.match/backtrack","e37442","js/Error","e__30676__auto__","e37443","e37444","e37445","e37441"],"sourcesContent":["(ns app.views.bar\n  (:require\n    [re-frame.core :refer [dispatch subscribe]]\n    ;[app.helpers.parser :refer [morse-text->flat-morse-text]]\n    ;[app.helpers.parse :refer []]\n    [garden.core :refer [css]]\n    [defun.core :refer [fun]]\n    [cljs.core.match :refer [match]]\n  ))\n\n(def ticker-width 1)\n(defn width [n] (str (* n ticker-width) \"rem\"))\n\n\n(defn styles []\n  [:style\n    (css [[:.outer-bar {:background-color \"#AAA\"\n                        :height \"3rem\"\n                        :display \"flex\"\n                        :width \"90vw\"}]\n          \n          [:.input-bar {:display \"block\"\n                        }]\n          [:.outer-3unit {:border-right \"solid #DDD thin\"\n                          :display \"flex\"\n                          :height \"100%\"\n                          :padding \"0 0.25rem\"\n                          :width (width 2.75)}]\n          [:.outer-unit { :border-right \"solid #DDD thin\"\n                          :height \"100%\"\n                          :width (width 1)}]\n          [:.outer-unit7 { :border-right \"solid #DDD thin\"\n                           :height \"100%\"\n                           :width (width 7)}]\n          [:.outer-dot { :border-right \"solid #DDD thin\"\n                         :display \"flex\"\n                         :justify-content \"center\"\n                             :height \"100%\"\n                             :width (width 1)}]\n          [:.inner-unit { :display \"flex\"\n                          :height \"100%\"\n                          :flex-direction \"column\"\n                          :width \"33%\"}]\n          [:.inner-top {  :border-bottom \"solid #000 0.25rem\"\n                             :height \"50%\"\n                             :width \"100%\"}]\n          [:.inner-bottom {:height \"50%\"\n                              :width \"100%\"}]\n          [:.dot-content {;:width \"100%\"\n                          :width \"0.25rem\"\n                          :height \"0.25rem\"\n                          ;:border \"solid #000 thick\"\n                          :margin-top \"1.35rem\"\n                          :background-color \"#000\"\n                          }]\n         ])])\n\n\n(defn dash [i]\n  [:div.outer-3unit {:key i}\n    [:div.inner-unit\n      [:div.inner-top]\n      [:div.inner-bottom]]\n    [:div.inner-unit\n      [:div.inner-top]\n      [:div.inner-bottom]]\n    [:div.inner-unit\n      [:div.inner-top]\n      [:div.inner-bottom]]])\n\n\n(defn dot [i]\n  [:div.outer-dot {:key i}\n    [:div.dot-content]])\n\n\n(defn charspace [i]\n  [:div.outer-unit {:key i}])\n\n\n(defn wordspace [i]\n  [:div.outer-unit7 {:key i}])\n\n\n(defn input-bar [morse-code opts]\n  [:div.input-bar\n    (styles) \n    [:div.outer-bar\n      (map-indexed\n        (fun\n          ([i \".\"]         [:<> {:key i} [dot i]])\n          ([i \"-\"]         [:<> {:key i} [dash i]])\n          ([i \"charspace\"] [:<> {:key i} [charspace i]])\n          ([i \"wordspace\"] [:<> {:key i} [wordspace i]]))\n        morse-code)]])\n"]}